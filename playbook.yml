---
- name: Setup
  hosts: localhost
  connection: local

  roles:
    - role: basic

  tasks:

    - name: Install fish
      # https://github.com/fish-shell/fish-shell#packages-for-linux
      become: true
      block:
        - name: Add fish repository from PPA
          ansible.builtin.apt_repository:
            repo: ppa:fish-shell/release-3
        - name: Install fish
          ansible.builtin.apt:
            name: fish
            state: present
            update_cache: true
        - name: Default shell
          ansible.builtin.user:
            name: "{{ ansible_user_id }}"
            shell: /usr/bin/fish

    - name: Add ~/.local/bin to PATH
      ansible.builtin.shell: fish_add_path {{ ansible_env.HOME }}/.local/bin
      args:
        executable: /usr/bin/fish
      register: add_path
      changed_when: add_path.rc == 0
      failed_when: false

    - name: Check if Fisher plugin is already installed
      # https://github.com/jorgebucaran/fisher#installation
      ansible.builtin.shell: functions -q fisher
      args:
        executable: /usr/bin/fish
      register: fisher
      changed_when: false
      failed_when: false
    - name: Download Fisher plugin
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish
        dest: /tmp/fisher.fish
        mode: "0644"
      when: fisher.rc != 0
    - name: Install Fisher plugin
      ansible.builtin.shell: source /tmp/fisher.fish && fisher install jorgebucaran/fisher
      args:
        executable: /usr/bin/fish
      changed_when: true
      when: fisher.rc != 0

    - name: Check if fzf plugin is installed
      # https://github.com/PatrickF1/fzf.fish#installation
      ansible.builtin.shell: fisher list fzf
      args:
        executable: /usr/bin/fish
      register: fzf
      changed_when: false
      failed_when: false

    - name: Download fzf
      # fuzzy finder (https://github.com/junegunn/fzf#using-linux-package-managers)
      ansible.builtin.git:
        depth: 1
        dest: "{{ ansible_env.HOME }}/.fzf"
        repo: https://github.com/junegunn/fzf.git
        version: "HEAD"  # noqa: latest

    - name: Install fzf
      ansible.builtin.command: "bash {{ ansible_env.HOME }}/.fzf/install"
      changed_when: true
      when: fzf.rc != 0

    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - fd-find  # simple, fast and user-friendly alternative to "find" (https://github.com/sharkdp/fd#on-ubuntu)
          - bat  # "cat" clone with syntax highlighting and git integration (https://github.com/sharkdp/bat#on-ubuntu-using-apt)
        state: present
        update_cache: true
      become: true
    - name: Create a binary directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.local/bin"
        state: directory
        mode: '0755'
    - name: Add symlink for fd
      ansible.builtin.file:
        src: /usr/bin/fdfind
        dest: "{{ ansible_env.HOME }}/.local/bin/fd"
        state: link
    - name: Add symlink for bat
      ansible.builtin.file:
        src: /usr/bin/batcat
        dest: "{{ ansible_env.HOME }}/.local/bin/bat"
        state: link
    - name: Install fzf plugin
      ansible.builtin.shell: fisher install PatrickF1/fzf.fish
      args:
        executable: /usr/bin/fish
      register: result
      changed_when: "'Installed 1 plugin/s' in result.stdout"

    - name: Install other fish plugins
      # done, receive notifications when long processes finish (https://github.com/franciscolourenco/done)
      # sponge, clean fish history from typos automatically (https://github.com/meaningful-ooo/sponge)
      # autopair, auto-complete matching pairs (https://github.com/jorgebucaran/autopair.fish)
      # pure, pretty, minimal, and fast prompt (https://github.com/pure-fish/pure)
      ansible.builtin.shell: |
        fisher install franciscolourenco/done
        fisher install meaningful-ooo/sponge
        fisher install jorgebucaran/autopair.fish
        fisher install pure-fish/pure
      args:
        executable: /usr/bin/fish
      changed_when: false


    - name: Install PyCharm
      community.general.snap:
        classic: true
        name: pycharm-professional
      become: true
      tags: installed_with_snap

    - name: Install Chromium
      community.general.snap:
        classic: true
        name: chromium
      become: true
      tags: installed_with_snap

    - name: Install Slack
      community.general.snap:
        classic: true
        name: slack
      become: true
      tags: installed_with_snap

    - name: Install Signal
      # https://signal.org/fr/download/linux/
      become: true
      block:
        - name: Install Signal official public software signing key
          ansible.builtin.get_url:
            url: https://updates.signal.org/desktop/apt/keys.asc
            dest: /usr/share/keyrings/signal-desktop-keyring.asc
            mode: "0644"
        - name: Add the repository URL
          ansible.builtin.apt_repository:
            filename: signal-xenial
            repo: deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.asc] https://updates.signal.org/desktop/apt xenial main
        - name: Install Signal
          ansible.builtin.apt:
            name: signal-desktop
            state: present
            update_cache: true

    - name: Install Flameshot
      become: true
      ansible.builtin.apt:
        name: flameshot
        state: present
        update_cache: true

    - name: Install Spotify
      community.general.snap:
        name: spotify
      become: true
      tags: installed_with_snap

    - name: Install mise
      # https://mise.jdx.dev/getting-started.html#apt
      become: true
      block:
        - name: Install mise public signing key
          ansible.builtin.get_url:
            url: https://mise.jdx.dev/gpg-key.pub
            dest: /etc/apt/keyrings/mise-archive-keyring.asc
            mode: "0644"
        - name: Add the repository URL
          ansible.builtin.apt_repository:
            filename: mise
            repo: deb [signed-by=/etc/apt/keyrings/mise-archive-keyring.asc arch=amd64] https://mise.jdx.dev/deb stable main
        - name: Install mise
          ansible.builtin.apt:
            name: mise
            state: present
            update_cache: true

    - name: Check if Obsidian is already installed
      # https://help.obsidian.md/Getting+started/Download+and+install+Obsidian#Install+Obsidian+on+Linux
      ansible.builtin.stat:
        path: /usr/bin/obsidian
      register: obsidian

    - name: Find latest Obsidian release
      ansible.builtin.uri:
        url: https://api.github.com/repos/obsidianmd/obsidian-releases/releases/latest
        return_content: true
      register: obsidian_release
      when: not obsidian.stat.exists

    - name: Retrieve the download URL
      vars:
        deb_asset: "{{ obsidian_release.json.assets | selectattr('name', 'contains', 'amd64.deb') | join() }}"
      ansible.builtin.set_fact:
        browser_download_url: "{{ deb_asset.browser_download_url }}"
      when: not obsidian.stat.exists

    - name: Download Obsidian
      ansible.builtin.get_url:
        url: "{{ browser_download_url }}"
        dest: /tmp/obsidian.deb
        mode: "0644"
      when: not obsidian.stat.exists

    - name: Install Obsidian
      ansible.builtin.apt:
        deb: /tmp/obsidian.deb
      become: true
      when: not obsidian.stat.exists

    - name: Check if docker is already installed
      # https://docs.docker.com/desktop/install/ubuntu/
      ansible.builtin.stat:
        path: /usr/bin/docker
      register: docker
    - name: Install Docker official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
      become: true
    - name: Add the repository URL
      ansible.builtin.apt_repository:
        filename: docker
        repo: deb [signed-by=/etc/apt/keyrings/docker.asc arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
      become: true
    - name: Download the .deb package
      ansible.builtin.get_url:
        url: https://desktop.docker.com/linux/main/amd64/docker-desktop-4.26.1-amd64.deb
        dest: /tmp/docker-desktop.deb
        mode: "0644"
      when: not docker.stat.exists
    - name: Install Docker
      ansible.builtin.apt:
        deb: /tmp/docker-desktop.deb
      become: true
      when: not docker.stat.exists

    - name: Install NvChad
      tags: installed_with_snap
      # https://nvchad.com/docs/quickstart/install
      block:
        - name: Install neovim
          community.general.snap:
            name: nvim
            classic: true
          become: true
        - name: Create a font directory
          ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/.local/share/fonts"
            state: directory
            mode: '0755'
        - name: Install JetBrains Mono Nerd Font
          ansible.builtin.get_url:
            url: https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/JetBrainsMono/Ligatures/Regular/JetBrainsMonoNerdFont-Regular.ttf
            dest: "{{ ansible_env.HOME }}/.local/share/fonts/JetBrainsMonoNerdFont-Regular.ttf"
            mode: "0644"
        - name: Clone a repo with separate git directory
          ansible.builtin.git:
            depth: 1
            dest: "{{ ansible_env.HOME }}/.config/nvim"
            repo: https://github.com/NvChad/NvChad
            version: "HEAD"  # noqa: latest
