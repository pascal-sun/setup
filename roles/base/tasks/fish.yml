---
################################################################################
# fish: the user-friendly command line shell

# Installation
# https://github.com/fish-shell/fish-shell#packages-for-linux
- name: Add fish repository from PPA
  become: true
  ansible.builtin.apt_repository:
    repo: ppa:fish-shell/release-3

- name: Install fish
  become: true
  ansible.builtin.apt:
    name: fish
    state: present
    update_cache: true

- name: Set fish as default shell
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: /usr/bin/fish

# fish completions
- name: Create completions directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/fish/completions"
    mode: u=rwx,g=rx,o=rx
    state: directory

# fish functions
- name: Add custom functions
  ansible.builtin.copy:
    src: files/.config/fish/functions/
    dest: "{{ ansible_env.HOME }}/.config/fish/functions"
    mode: u=rw,g=r,o=r

# fish abbreviations
# (https://fishshell.com/docs/current/cmds/abbr.html)
- name: Add custom abbreviations
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.config/fish/config.fish"
    block: |
      abbr --add update \
      "sudo apt update --assume-yes && sudo apt upgrade --assume-yes && \
      sudo snap refresh && \
      pipx upgrade-all && \
      mise upgrade --yes && \
      fisher update"

      # lsd
      abbr --add ls "lsd"
      abbr --add ll "lsd --almost-all --group-directories-first -l"

      # bat
      abbr --add cat "bat --paging=never"
      abbr --add batlog --set-cursor "tail -f % | bat --paging=never -l log"
    create: true
    marker: >-
      # {mark} ANSIBLE MANAGED BLOCK: Update APT, Snap, pipx packages and
      mise, fish plugins
    mode: u=rw,g=r,o=r
    prepend_newline: true

################################################################################
# Fisher

# Prerequisite
- name: Install curl
  become: true
  ansible.builtin.apt:
    name: curl
    state: present
    update_cache: true

- name: Create local binary directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/bin"
    mode: u=rwx,g=rx,o=rx
    state: directory


# Installation
# https://github.com/jorgebucaran/fisher#installation
- name: Check if Fisher is already installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/fish/functions/fisher.fish"
  register: fisher

- name: Download Fisher
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/\
    jorgebucaran/fisher/main/functions/fisher.fish"
    dest: /tmp/fisher.fish
    mode: u=rw,g=r,o=r
  when: not fisher.stat.exists

- name: Install Fisher
  ansible.builtin.shell: >
    source /tmp/fisher.fish && fisher install jorgebucaran/fisher
  args:
    executable: /usr/bin/fish
  register: result
  changed_when: "'Installed 1 plugin/s' in result.stdout"
  failed_when: result.rc != 0
  when: not fisher.stat.exists

################################################################################
# Pure: pretty, minimal, and fast prompt for Fish shell
# https://github.com/pure-fish/pure?tab=readme-ov-file#rocket-install
# - name: Install pure-fish/pure
#   ansible.builtin.shell: fisher install pure-fish/pure
#   args:
#     executable: /usr/bin/fish
#   register: result
#   changed_when: "'Installed 1 plugin/s' in result.stdout"
#   failed_when: result.rc != 0

################################################################################
# fzf.fish: fzf plugin for Fish
# https://github.com/PatrickF1/fzf.fish#installation
- name: Install PatrickF1/fzf.fish
  ansible.builtin.shell: fisher install PatrickF1/fzf.fish
  args:
    executable: /usr/bin/fish
  register: result
  changed_when: "'Installed 1 plugin/s' in result.stdout"
  failed_when: result.rc != 0

################################################################################
# fish-abbreviation-tips: help you remember your abbreviations
# https://github.com/Gazorby/fish-abbreviation-tips?tab=readme-ov-file#-install
- name: Install gazorby/fish-abbreviation-tips
  ansible.builtin.shell: fisher install gazorby/fish-abbreviation-tips
  args:
    executable: /usr/bin/fish
  register: result
  changed_when: "'Installed 1 plugin/s' in result.stdout"
  failed_when: result.rc != 0

################################################################################
# Starship, the minimal, blazing-fast,
# and infinitely customizable prompt for any shell!

# Installation
# https://starship.rs/guide/#%F0%9F%9A%80-installation
- name: Check if Starship is already installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.local/bin/starship"
  register: starship

- name: Download Starship
  ansible.builtin.get_url:
    url: "https://starship.rs/install.sh"
    dest: /tmp/install.sh
    mode: u=rw,g=r,o=r
  when: not starship.stat.exists

- name: Install Starship
  ansible.builtin.shell: >
    sh /tmp/install.sh --force --bin-dir {{ ansible_env.HOME }}/.local/bin
  args:
    executable: /usr/bin/fish
  register: result
  changed_when: "'Starship latest install' in result.stdout"
  failed_when: result.rc != 0
  when: not starship.stat.exists

# Setup
- name: Initialize Starship in fish
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.config/fish/config.fish"
    block: |
      # https://starship.rs/guide/#step-2-set-up-your-shell-to-use-starship
      starship init fish | source
    create: true
    marker: >-
      # {mark} ANSIBLE MANAGED BLOCK: Initialize Startship
    mode: u=rw,g=r,o=r
    prepend_newline: true
