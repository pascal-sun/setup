---
# To check Ubuntu's default installed packages:
# - Go to https://releases.ubuntu.com/
# - Choose the release and the version
# - Find the .manifest file (ubuntu-XX.XX.X-desktop-amd64.manifest)

################################################################################
# Install non-default packages that requires no configuration
- name: Install apt packages
  become: true
  ansible.builtin.apt:
    name:
      - curl  # for transferring data specified with URL syntax
      - flameshot  # powerful yet simple to use screenshot software
      - fzf  # command-line fuzzy finder
      # - htop # an interactive process viewer
      - jq  # a JSON processor
      - git
      # - ripgrep
      - pipx  # install and run python applications in isolated environments
    state: present
    update_cache: true

- name: Add ~/.local/bin to PATH
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.config/fish/config.fish"
    create: true
    line: "set PATH $PATH {{ ansible_env.HOME }}/.local/bin"
    mode: u=rw,g=r,o=r

- name: Check if pipx completions for fish exists
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/fish/completions/pipx.fish"
  register: completions_pipx

- name: Add shell completions for pipx
  ansible.builtin.shell: >
    register-python-argcomplete --shell fish pipx
    > {{ ansible_env.HOME }}/.config/fish/completions/pipx.fish
  args:
    executable: /usr/bin/fish
  register: result
  changed_when: true
  failed_when: result.rc != 0
  when: not completions_pipx.stat.exists

# Cheatsheets for console commands
# https://github.com/tldr-pages/tldr
- name: Install tldr
  community.general.snap:
    classic: true
    name: tldr
  become: true
  tags: installed_with_snap

- name: Create local binary directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/bin"
    mode: u=rwx,g=rx,o=rx
    state: directory

# simple, fast and user-friendly alternative to "find"
# (https://github.com/sharkdp/fd#on-ubuntu)
- name: Install fd, alternative to "find"
  become: true
  ansible.builtin.apt:
    name: fd-find
    state: present
    update_cache: true

- name: Add symlink for fd
  ansible.builtin.file:
    src: /usr/bin/fdfind
    dest: "{{ ansible_env.HOME }}/.local/bin/fd"
    state: link


# "cat" clone with syntax highlighting and git integration
# (https://github.com/sharkdp/bat#on-ubuntu-using-apt)
- name: Install bat
  become: true
  ansible.builtin.apt:
    name: bat
    state: present
    update_cache: true

- name: Add symlink for bat
  ansible.builtin.file:
    src: /usr/bin/batcat
    dest: "{{ ansible_env.HOME }}/.local/bin/bat"
    state: link

- name: Add MANPAGER to colorize pager for man
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.config/fish/config.fish"
    create: true
    line: >-
      set MANPAGER
      "sh -c 'col --no-backspaces --spaces | bat --plain --language man'"
    mode: u=rw,g=r,o=r


# The next gen ls command
# (https://github.com/lsd-rs/lsd)
- name: Check if lsd is already installed
  ansible.builtin.stat:
    path: /usr/bin/lsd
  register: lsd

- name: Download lsd
  ansible.builtin.get_url:
    url: >-
      https://github.com/lsd-rs/lsd/releases/download/v1.0.0/lsd_1.0.0_amd64.deb
    dest: /tmp/lsd.deb
    mode: u=rw,g=r,o=r
  when: not lsd.stat.exists

- name: Install lsd package
  become: true
  ansible.builtin.apt:
    deb: /tmp/lsd.deb
  when: not lsd.stat.exists

- name: Create configuration directory for lsd ~/.config/lsd
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/lsd"
    mode: u=rwx,g=rx,o=rx
    state: directory

- name: Add lsd configuration file
  ansible.builtin.copy:
    src: files/.config/lsd/config.yaml
    dest: "{{ ansible_env.HOME }}/.config/lsd/config.yaml"
    mode: u=rw,g=r,o=r
