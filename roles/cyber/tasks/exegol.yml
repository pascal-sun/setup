---
################################################################################
# Exegol: hacking environment, powerful and yet simple

# Installation
# https://exegol.readthedocs.io/en/latest/getting-started/install.html
- name: Install exegol
  community.general.pipx:
    name: exegol
  vars:
    ansible_python_interpreter: /usr/bin/python3

# Completion
# https://exegol.readthedocs.io/en/latest/getting-started/install.html#optional-using-exegol-auto-completion
- name: Check if exegol completions for fish exists
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/fish/completions/exegol.fish"
  register: completions_exegol

- name: Add shell completions for exegol
  ansible.builtin.shell: >
    register-python-argcomplete --no-defaults --shell fish exegol
    > {{ ansible_env.HOME }}/.config/fish/completions/exegol.fish
  args:
    executable: /usr/bin/fish
  register: result
  failed_when: result.rc != 0
  changed_when: true
  when: not completions_exegol.stat.exists

################################################################################
# Configuration need to be done after creating a new container manually
- name: Check if my-resources exists
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.exegol/my-resources"
  register: my_resources

# Custom wordlists
- name: Create wordlists directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.exegol/my-resources/wordlists"
    mode: u=rwx,g=rx,o=rx
    state: directory
  when: my_resources.stat.exists

- name: Download OneListForAll wordlists
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/\
    six2dez/OneListForAll/main/{{ item }}"
    dest: "{{ ansible_env.HOME }}/.exegol/my-resources/\
    wordlists/{{ item }}"
    mode: u=rw,g=r,o=r
  loop:
    - onelistforallmicro.txt
    - onelistforallshort.txt
  when: my_resources.stat.exists

# User setup
# https://exegol.readthedocs.io/en/latest/exegol-image/my-resources.html#user-setup
- name: Copy configuration files
  ansible.builtin.copy:
    src: files/.exegol/my-resources/setup/config/
    dest: "{{ ansible_env.HOME }}/.exegol/my-resources/setup/config/"
    mode: u=rw,g=r,o=r
  when: my_resources.stat.exists

- name: Update load_user_setup.sh file
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.exegol/my-resources/setup/load_user_setup.sh"
    block: |
      # feroxbuster
      mkdir -p /root/.config/feroxbuster
      cp /opt/my-resources/setup/config/ferox-config.toml \
      /root/.config/feroxbuster/ferox-config.toml

      # ffuf
      cp /opt/my-resources/setup/config/ffuf-config.toml /root/.ffufrc

      # nuclei
      mkdir -p /root/.config/nuclei
      cp /opt/my-resources/setup/config/nuclei-config.yaml \
      /root/.config/nuclei/config.yaml

      # wordlists
      cp -r /opt/my-resources/wordlists/ /usr/share/wordlists/my-wordlists/
    marker: >-
      # {mark} ANSIBLE MANAGED BLOCK: Copy configuration file
    prepend_newline: true
  when: my_resources.stat.exists
